const { Router } = require('express');
const router = Router();
const s = require('../../src/utils/safeOpeningsSequence');

const balconyRanges = { x: [1000, 6500], y: [500, 2000], z: null };
const sillPrice = {
  150: [1.5, 3],
  200: [2, 4],
  250: [2.5, 5],
  300: [3, 6],
  350: [3.5, 7],
  400: [4, 8],
  450: [4.5, 9],
  500: [5, 10],
  550: [5.5, 11],
  600: [6, 12],
  650: [6.5, 13],
  700: [7, 14],
  750: [7.5, 15],
  800: [8, 16],
  850: [8.5, 17],
  900: [9, 18]
};

/**
 * Допустимые диапозоны значений не зависящии от прочих параметров оконной кострукции
 */

/**
 * Конфигурация окна закодирована последовательностью цифр с длинной равной колличеству створок окна
 * Цифры должны распологаться СТРОГО в порядке убывания, для безопасности используйте функцию safeOpeningsSequence
 * 0 - глухая створка
 * 1 - поворотная створка
 * 2 - поворотно-откидная створка
 */

router.get('/', async (req, res, next) => {
  res.json(
    {
      status: 'OK',
      payload: {
        // Допустимые диапозоны размеров окон для каждой конфигурации створок
        windows: {
          '0': { x: [450, 1600], y: [500, 2000] },
          '1': { x: [450, 1600], y: [500, 2000] },
          '2': { x: [450, 1600], y: [500, 2000] },
          [s('10')]: { x: [450, 1600], y: [500, 2000] },
          [s('20')]: { x: [450, 1600], y: [500, 2000] },
          [s('11')]: { x: [450, 1600], y: [500, 2000] },
          [s('12')]: { x: [450, 1600], y: [500, 2000] },
          [s('22')]: { x: [450, 1600], y: [500, 2000] },
          [s('100')]: { x: [450, 1600], y: [500, 2000] },
          [s('200')]: { x: [450, 1600], y: [500, 2000] },
          [s('101')]: { x: [450, 1600], y: [500, 2000] },
          [s('201')]: { x: [450, 1600], y: [500, 2000] },
          [s('202')]: { x: [450, 1600], y: [500, 2000] },
          [s('111')]: { x: [450, 1600], y: [500, 2000] },
          [s('121')]: { x: [450, 1600], y: [500, 2000] },
          [s('212')]: { x: [450, 1600], y: [500, 2000] },
          [s('222')]: { x: [450, 1600], y: [500, 2000] }
        },
        // Допустимые диапозоны размеров двери для разных вариантов открытия
        doors: {
          1: { x: [450, 1600], y: [500, 2000] },
          2: { x: [450, 1600], y: [500, 2000] }
        },
        balcony: {
          twoPanes: { ...balconyRanges, panes: { min: 2, max: 2 } },
          threePanes: { ...balconyRanges, panes: { min: 3, max: 3 } },
          fourPanes: { ...balconyRanges, panes: { min: 4, max: 10 } },
          cornerLeft: {
            ...balconyRanges,
            z: [500, 1000],
            panes: { min: 2, max: 5 }
          },
          cornerRight: {
            ...balconyRanges,
            z: [500, 1000],
            panes: { min: 2, max: 5 }
          },
          twoCorners: {
            ...balconyRanges,
            z: [500, 1000],
            panes: { min: 4, max: 10 }
          },
          angleLeft: { ...balconyRanges, panes: { min: 2, max: 10 } },
          angleRight: { ...balconyRanges, panes: { min: 2, max: 10 } }
        },
        balconyPaneWidth: [500, 1000],
        mountingDepth: [50, 1000], // Диапозон допустимой глубины монтажа
        slopesDepth: [50, 500], // Диапозон допустимой глубины откосов
        windowSill: { x: [200, 3000], y: [150, 900] }, // длинна и грубина подоконника
        // Бренды подоконников
        sillsBrands: [
          { id: 1, title: 'Montblanc', price: sillPrice },
          { id: 2, title: 'Rehau', price: sillPrice },
          { id: 3, title: 'Wintech', price: sillPrice },
          { id: 4, title: 'Novotex', price: sillPrice }
        ],
        // Цена на подоконник для балконов
        sillPrice,

        /**
         * Ключ — длина в милиметрах с которой начинается цена
         */
        slopesInstallation: {
          0: 460,
          300: 540,
          500: 640
        },
        parapetPaneling: {
          outer: 2450,
          inner: 1500
        },

        /**
         * Стоимость подъема м² на этаж
         */
        pricePerFloor: 26,

        /**
         * Отлив
         */
        outerSill: 1.14,

        /**
         * Козырёк
         */
        visor: 2.84,

        mosquitoNet: 0.08
      }
    },
    null,
    2
  );
});

module.exports = router;
