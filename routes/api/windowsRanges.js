const { Router } = require('express');
const router = Router();
const s = require('../../src/utils/safeOpeningsSequence');

/**
 * Конфигурация окна закодирована последовательностью цифр с длинной равной колличеству створок окна
 * Цифры должны распологаться СТРОГО в порядке убывания, для безопасности используйте функцию safeOpeningsSequence
 * 0 - глухая створка
 * 1 - поворотная створка
 * 2 - поворотно-откидная створка
 */

router.get('/', async (req, res, next) => {
  res.json(
    {
      status: 'OK',
      payload: {
        // Допустимые диапозоны размеров окон для каждой конфигурации створок
        windows: {
          '0': { x: [450, 1600], y: [500, 2000] },
          '1': { x: [450, 1600], y: [500, 2000] },
          '2': { x: [450, 1600], y: [500, 2000] },
          [s('10')]: { x: [450, 1600], y: [500, 2000] },
          [s('20')]: { x: [450, 1600], y: [500, 2000] },
          [s('11')]: { x: [450, 1600], y: [500, 2000] },
          [s('12')]: { x: [450, 1600], y: [500, 2000] },
          [s('22')]: { x: [450, 1600], y: [500, 2000] },
          [s('100')]: { x: [450, 1600], y: [500, 2000] },
          [s('200')]: { x: [450, 1600], y: [500, 2000] },
          [s('101')]: { x: [450, 1600], y: [500, 2000] },
          [s('201')]: { x: [450, 1600], y: [500, 2000] },
          [s('202')]: { x: [450, 1600], y: [500, 2000] },
          [s('111')]: { x: [450, 1600], y: [500, 2000] },
          [s('121')]: { x: [450, 1600], y: [500, 2000] },
          [s('212')]: { x: [450, 1600], y: [500, 2000] },
          [s('222')]: { x: [450, 1600], y: [500, 2000] }
        },
        // Допустимые диапозоны размеров двери для размных вариантов открытия
        doors: {
          1: { x: [450, 1600], y: [500, 2000] },
          2: { x: [450, 1600], y: [500, 2000] }
        },
        mountingDepth: [50, 1000],
        slopesDepth: [50, 500],
        windowSill: { x: [450, 2000], y: [10, 500] },
        sillsBrands: [
          { id: 1, title: 'Montblanc' },
          { id: 2, title: 'Rehau' },
          { id: 3, title: 'Wintech' },
          { id: 4, title: 'Novotex' }
        ],
        avaibleFloors: [
          { id: 1, title: 'Первый' },
          { id: 2, title: 'Второй' },
          { id: 3, title: 'Третий' },
          { id: 6, title: 'Выше пятого' }
        ]
      }
    },
    null,
    2
  );
});

module.exports = router;
